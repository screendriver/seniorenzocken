import { seed } from "drizzle-seed";
import type { Client } from "@libsql/client";
import type { LibSQLDatabase } from "drizzle-orm/libsql";
import * as schema from "./database/schema.ts";

const twoSecondsOfSilence = Buffer.from(
	`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`,
	"base64",
);

const seedNumber = 42;

export async function seedInMemoryDatabase(database: LibSQLDatabase<typeof schema> & { $client: Client }) {
	// @ts-expect-error currently a bug in drizzle-seed
	await seed(database, { players: schema.players }, { seed: seedNumber }).refine((drizzleSeed) => {
		return {
			players: {
				count: 8,
				columns: {
					totalPoints: drizzleSeed.int({
						minValue: 0,
						maxValue: 100,
					}),
					totalGameRounds: drizzleSeed.int({
						minValue: 0,
						maxValue: 100,
					}),
				},
			},
		};
	});

	await database.insert(schema.teams).values([
		{
			createdAt: "2025-07-10 10:17:51",
			player1Id: 1,
			player2Id: 3,
		},
		{
			createdAt: "2025-08-10 15:00:00",
			player1Id: 5,
			player2Id: 8,
		},
	]);

	await database.insert(schema.games).values([
		{
			team1Id: 1,
			team2Id: 2,
			team1Points: 15,
			team2Points: 7,
		},
		{
			team1Id: 1,
			team2Id: 2,
			team1Points: 8,
			team2Points: 15,
		},
	]);

	await database.insert(schema.gamePointAudios).values({
		name: "attention.m4a",
		audioFile: twoSecondsOfSilence,
	});
}
